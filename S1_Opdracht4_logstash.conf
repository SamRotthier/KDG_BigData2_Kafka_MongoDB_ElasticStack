input {
  kafka {
    id => "data_engineering_test"
    bootstrap_servers => "Kafka1:9092"
    topics => ["Velo-Data"]
    codec => plain
  }
}
filter {
  json {
    source => "message"
  }

  # Parse timestamp for proper time-based queries
  if [timestamp] {
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }

  # Extract coordinates and create zone fields for aggregations
  if [location] {
    ruby {
      code => "
        location = event.get('location')
        if location && location['x'] && location['y']
          lon = location['x'].to_f
          lat = location['y'].to_f
          event.set('longitude', lon)
          event.set('latitude', lat)
          event.set('zone_lon', lon.round(3))
          event.set('zone_lat', lat.round(3))
          event.set('zone_id', lat.round(3).to_s + '_' + lon.round(3).to_s)
        end
      "
    }
  }

  # Add units based on measurement type
  if [measurement_type] == "GELUID" {
    mutate { add_field => { "unit" => "dB" } }
  } else if [measurement_type] == "FIJNSTOF" {
    mutate { add_field => { "unit" => "μg/m³" } }
  } else if [measurement_type] == "TEMPERATUUR" {
    mutate { add_field => { "unit" => "°C" } }
  }
}
output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    user => "logstash_internal"
    password => "${LOGSTASH_INTERNAL_PASSWORD}"
    data_stream => "true"
    data_stream_dataset => "velo.telemetry"
  }
}

